---
title: "Training"
echo: false
listing:
  id: training-listings
  contents: blog
  type: table
  max-items: 1
  sort: "date desc"
  fields: [date, title]
  sort-ui: false
  filter-ui: false
  include:
    show_on_training: TRUE
---

```{r get-github-folder, eval = FALSE}
get_github_folder <- function(url) {
  req <- httr::GET(
    url
  )
  
  url_contents <- httr::content(req)
  
  return(url_contents)
}
```

```{r get-blog-entries, eval = FALSE}
# https://stackoverflow.com/questions/70938808/r-rvest-retrieve-files-from-github

blog_entries_list <- get_github_folder(
  url = "https://api.github.com/repos/RichardMeyer-Eppler/iaido-dortmund/contents/blog"
)

urls <- blog_entries_list |> 
  purrr::map_chr(
    "url"
  ) |> 
  tibble::as_tibble_col(
    column_name = "url"
  ) 

```

```{r get-posts, eval = FALSE}

posts <- urls |> 
  dplyr::rowwise() |> 
  dplyr::mutate(
    content = list(
      get_github_folder(
        url = url
      )
    )
  )

```

```{r retrieve-download-urls, eval = FALSE}

download_urls <- posts |> 
  tidyr::unnest_wider(
    data = _,
    col = content,
    names_sep = "_"
  ) |> 
  tidyr::unnest_wider(
    col = content_1,
    names_sep = "_"
  ) |> 
  dplyr::filter(
    !is.na(content_1_download_url)
  )
```


```{r get-yaml, eval = FALSE}
posts_yaml <- download_urls |>  
  dplyr::rowwise() |> 
  dplyr::mutate(
    text = list(
      readLines(
        content_1_download_url
      )
    ),
    yaml_end_index = which(
      text == "---"
    )[2],
    yaml_only = list(
      text[seq(yaml_end_index)]
    ),
    yaml_parsed = list(
      yaml::yaml.load(
        yaml_only
      )
    )
  ) |> 
  dplyr::select(
    url,
    download_url = content_1_download_url,
    text:dplyr::last_col()
  ) |> 
  tidyr::unnest_wider(
    data = _,
    col = yaml_parsed
  ) |> 
  dplyr::mutate(
    expiration_date = lubridate::as_date(
      expiration_date
    )
  )

```

```{r display-booleans, eval = FALSE}

posts_to_display <- posts_yaml |> 
  dplyr::filter(
    show_on_training & 
      Sys.Date() >= expiration_date
  )

has_current_news <- nrow(posts_to_display) > 0

```

## Trainingsort und -zeiten

Das Training findet jeden Freitag von 18:30 bis 20:00 Uhr in der Eichlinghofer Grundschule (Stortsweg 52, 44227 Dortmund, [{{< fa brands google >}}](https://maps.app.goo.gl/N6KBVVVCBQbx5bF79 "Wegbeschreibung Google Maps")) statt.

```{r, echo = FALSE, warning = FALSE}

library(leaflet)

leaflet::leaflet() %>%
  leaflet::addTiles() %>%  # Add default OpenStreetMap map tiles
  leaflet::addMarkers(
    lng = 7.40805,
    lat = 51.47860,
    popup = "Sporthalle der Eichlinghofer Grundschule")
```

```{r, eval = FALSE, results= 'asis'}
cat(
  "## Aktuelles"
)
```

## Was brauche ich für das erste Training

Zum ersten Training bitte eine lange Hose und bequeme Sportkleidung mitbringen.
Falls von anderen Kampfkünsten vorhanden können auch gerne schon *Gi* und *Hakama* getragen werden.
Ebenfalls praktisch ist ein Budo Gürtel (*Obi*), der das Schwert an der Hüfte halten und den Unterbauch fixieren soll (die Farbe spielt dabei keine Rolle).
Holzschwerter (*Bokken* bzw. *Bokuto*) für den Einstieg sind vorhanden.

::: callout-caution
Bitte nicht voreilig ein Iaito (stumpfes Trainingsschwert) kaufen, da hierfür unbedingt persönliche Beratung erforderlich ist!
Im Training kann alles relevante zum Kauf besprochen und geklärt werden.

Auch beim Kauf der traditionellen Trainingsbekleidung gibt es einige Punkte zu beachten.
Mehr dazu kann auf den Seiten des [Esaka Dojo Potsdam](http://www.iaido-potsdam.de/html/Iaido_Bekleidung.html) nachgelesen und im Training besprochen werden.
:::

## Gäste (anderer Kampfkünste, Stilrichtungen, Verbände)

Wir freuen uns über konstruktiven Austausch mit interessierten Menschen, auch wenn keine dauerhafte Trainingsabsicht in unserem Dojo dahinter steckt.
Meldet euch vorab kurz an und kommt vorbei!

![](images/tempel_yokochiburi.jpg)
